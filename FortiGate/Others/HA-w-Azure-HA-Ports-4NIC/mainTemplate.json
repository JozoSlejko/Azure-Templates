{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Name for the first Virtual Firewall"
      }
    },
    "vm2Name": {
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Name for the second Virtual Firewall"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "Availability Set name that we should deploy the Firewall into"
      }
    },
    "FortiGateImageSKU": {
      "type": "string",
      "defaultValue": "fortinet_fg-vm",
      "allowedValues": [
        "fortinet_fg-vm",
        "fortinet_fg-vm_payg"
      ],
      "metadata": {
        "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
      }
    },
    "FortiGateVersion": {
      "type": "string",
      "defaultValue": "latest",
      "allowedValues": [
        "5.6.6",
        "6.0.2",
        "6.0.3",
        "latest"
      ],
      "metadata": {
        "description": "Select image version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_F4s",
      "allowedValues": [
        "Standard_F2s",
        "Standard_F4s",
        "Standard_F8s"
      ],
      "metadata": {
          "description": "Virtual Machine size selection"
      }
    },
    "publicIPAddressType": {
      "type": "string",
      "defaultValue": "Static",
      "allowedValues": [
        "Static"
      ],
      "metadata": {
        "description": "Type of public IP address - for preview 'Standard' load balancer, static IPs are required."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure virtual network."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group containing the virtual network - or new resource group from above (if new vnet)"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 1 Name - external"
      }
    },
    "Subnet2Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 2 Name - internal"
      }
    },
    "subnet2LoadBalancerIP": {
      "type": "string",
      "metadata": {
        "description": "Static IP for internal LB on the internal subnet."
      }
    },
    "Subnet3Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 3 Name - management subnet"
      }
    },
    "Subnet4Name": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Subnet 4 Name - diagnostic subnet"
      }
    },
    "internalLBName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Internal Load Balancer Name"
      }
    },
    "publicLBName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "External Load Balancer Name"
      }
    },
    "tags": {
      "type": "object",
      "metadata": {
        "description": "Resource Tags"
      }
    }
  },
  "variables": {
    "availabilitySetId": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]",

    "vnetID": "[resourceId(parameters('vnetResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet1Name'))]",
    "subnet2Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet2Name'))]",
    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet3Name'))]",
    "subnet4Ref": "[concat(variables('vnetID'),'/subnets/', parameters('Subnet4Name'))]",

    "internalLBFEName": "[concat(parameters('internalLBName'),'-',parameters('Subnet2Name'),'-FrontEnd')]",
    "internalLBBEName": "[concat(parameters('internalLBName'),'-',parameters('Subnet2Name'),'-BackEnd')]",

    "internalLBid": "[resourceID('Microsoft.Network/loadBalancers',parameters('internalLBName'))]",
    "internalLB_BEId": "[concat(variables('internalLBid'),'/backendAddressPools/',variables('internalLBBEName'))]",

    "publicIPAddressName": "[concat(parameters('publicLBName'), '-ipv4-publicip')]",
    "publicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]",
    "publicIPDNSName": "[concat('smithsbis', parameters('publicLBName'))]",

    "network_LB_Public_Id": "[resourceId('Microsoft.Network/loadBalancers',parameters('publicLBName'))]",
    "network_LB_Public_FEName": "publicLBFE01",
    "network_LB_Public_FEId": "[concat(variables('network_LB_Public_Id'),'/frontendIPConfigurations/',variables('network_LB_Public_FEName'))]",
    "network_LB_Public_BEName": "publicLBBE01",
    "network_LB_Public_BEId": "[concat(variables('network_LB_Public_Id'),'/backendAddressPools/',variables('network_LB_Public_BEName'))]",
    "network_LB_Public_NatRule_SSH_fg1_Name": "SSH01",
    "network_LB_Public_NatRule_SSH_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_SSH_fg1_Name'))]",
    "network_LB_Public_NatRule_FGAdminPerm_fg1_Name": "FGAdminPerm01",
    "network_LB_Public_NatRule_FGAdminPerm_fg1_Id": "[concat(variables('network_LB_Public_Id'),'/inboundNatRules/',variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name'))]",

    "vm1PublicIPName": "[concat(parameters('vmName'), '-ipv4-publicip')]",
    "vm1PublicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',variables('vm1PublicIPName'))]",
    "vm1PublicIPDNSName": "[concat('smithsbis', parameters('vmName'))]",
    "vm2PublicIPName": "[concat(parameters('vm2Name'), '-ipv4-publicip')]",
    "vm2PublicIPID": "[resourceID('Microsoft.Network/publicIPAddresses',variables('vm2PublicIPName'))]",
    "vm2PublicIPDNSName": "[concat('smithsbis', parameters('vm2Name'))]",

    "network_NIC_fg11_Name": "[concat(parameters('vmName'),'Nic0')]",
    "network_NIC_fg11_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg11_Name'))]",
    "network_NIC_fg12_Name": "[concat(parameters('vmName'),'Nic1')]",
    "network_NIC_fg12_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg12_Name'))]",
    "network_NIC_fg13_Name": "[concat(parameters('vmName'),'Nic2')]",
    "network_NIC_fg13_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg13_Name'))]",
    "network_NIC_fg14_Name": "[concat(parameters('vmName'),'Nic3')]",
    "network_NIC_fg14_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg14_Name'))]",

    "network_NIC_fg21_Name": "[concat(parameters('vm2Name'),'Nic0')]",
    "network_NIC_fg21_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg21_Name'))]",
    "network_NIC_fg22_Name": "[concat(parameters('vm2Name'),'Nic1')]",
    "network_NIC_fg22_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg22_Name'))]",
    "network_NIC_fg23_Name": "[concat(parameters('vm2Name'),'Nic2')]",
    "network_NIC_fg23_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg23_Name'))]",
    "network_NIC_fg24_Name": "[concat(parameters('vm2Name'),'Nic3')]",
    "network_NIC_fg24_Id": "[resourceId('Microsoft.Network/networkInterfaces',variables('network_NIC_fg24_Name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 3,
        "platformUpdateDomainCount": 5
      },
      "sku": {
        "name":  "Aligned"
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('internalLBName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('internalLBFEName')]",
            "properties": {
              "privateIPAddress": "[parameters('subnet2LoadBalancerIP')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('internalLBBEName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/frontendIpConfigurations/', variables('internalLBFEName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/backendAddressPools/', variables('internalLBBEName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), '/probes/lbprobe')]"
              },
              "protocol": "All",
              "frontendPort": 0,
              "backendPort": 0,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbruleFE2all"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "sku": 
      {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('publicIPDNSName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm1PublicIPName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "sku": 
      {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('vm1PublicIPDNSName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('vm2PublicIPName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "sku": 
      {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('vm2PublicIPDNSName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('publicLBName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "sku": 
      {
        "name": "Standard"
      },
      "dependsOn": [
        "[variables('publicIPID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('network_LB_Public_FEName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('network_LB_Public_BEName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/frontendIpConfigurations/', variables('network_LB_Public_FEName'))]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/backendAddressPools/', variables('network_LB_Public_BEName'))]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('publicLBName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": true,
              "idleTimeoutInMinutes": 15
            },
            "name": "PublicLBRule-FE1-http"
          }
        ],
        "inboundNatRules": [
          {
            "name": "[variables('network_LB_Public_NatRule_SSH_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 22,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Name')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('network_LB_Public_FEId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 22,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg11_Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('network_LB_Public_Id')]",
        "[variables('vm1PublicIPID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('network_LB_Public_BEId')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[variables('network_LB_Public_NatRule_SSH_fg1_Id')]"
                },
                {
                  "id": "[variables('network_LB_Public_NatRule_FGAdminPerm_fg1_Id')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg21_Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('network_LB_Public_Id')]",
        "[variables('vm2PublicIPID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet1Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('network_LB_Public_BEId')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg12_Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('internalLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BEId')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg22_Name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', parameters('internalLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet2Ref')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLB_BEId')]"
                }
              ]
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg13_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg23_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet3Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg14_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('network_NIC_fg24_Name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet4Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "[parameters('FortiGateImageSKU')]",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg11_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg12_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg13_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg14_Name'))]",
        "[concat('Microsoft.Compute/availabilitySets/',parameters('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('availabilitySetId')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "[parameters('FortiGateImageSKU')]",
            "version": "[parameters('FortiGateVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), '-os')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vmName'), '-data01')]",
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg11_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg12_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg13_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg14_Id')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vm2Name')]",
      "apiVersion": "2018-10-01",
      "tags": "[parameters('tags')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "[parameters('FortiGateImageSKU')]",
        "publisher": "fortinet",
        "product": "fortinet_fortigate-vm_v5"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg21_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg22_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg23_Name'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('network_NIC_fg24_Name'))]",
        "[concat('Microsoft.Compute/availabilitySets/',parameters('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[variables('availabilitySetId')]"
        },
        "osProfile": {
          "computerName": "[parameters('vm2Name')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "fortinet",
            "offer": "fortinet_fortigate-vm_v5",
            "sku": "[parameters('FortiGateImageSKU')]",
            "version": "[parameters('FortiGateVersion')]"
          },
          "osDisk": {
            "name": "[concat(parameters('vm2Name'), '-os')]",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "[concat(parameters('vm2Name'), '-data01')]",
              "diskSizeGB": 30,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[variables('network_NIC_fg21_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg22_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg23_Id')]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[variables('network_NIC_fg24_Id')]"
            }
          ]
        }
      }
    }
  ]
  }
